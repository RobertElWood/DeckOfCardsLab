namespace DeckofCardsAPILab.Models
{

    //1) Creates new deck that UNSHUFFlED

    public class NewDeck
    {
        public bool success { get; set; }
        public string deck_id { get; set; }
        public bool shuffled { get; set; }
        public int remaining { get; set; }
    }

    //2) Shuffles Deck
    //If call to deck includes deck ID, will acct for drawn cards, etc.

    public class ShuffledDeck
    {
        public bool success { get; set; }
        public string deck_id { get; set; }
        public int remaining { get; set; }
        public bool shuffled { get; set; }
    }

    //3) Objects to hold cards drawn from deck.
    //Uses deckID generated by ShuffleDeck

    public class DrawACard
    {
        public bool success { get; set; }
        public string deck_id { get; set; }
        public Card[] cards { get; set; }
        public int remaining { get; set; }
    }

    public class Card
    {
        public string code { get; set; }
        public string image { get; set; }
        public Images images { get; set; }
        public string value { get; set; }
        public string suit { get; set; }
    }

    public class Images
    {
        public string svg { get; set; }
        public string png { get; set; }
    }

    //4) Reshuffled cards.Has same properties as Shuffle, so not sure if I need.

    public class Reshuffle
    {
        public bool success { get; set; }
        public string deck_id { get; set; }
        public int remaining { get; set; }
        public bool shuffled { get; set; }
    }

    //5)Add cards to player's hand/discard pile to keep. 
    //Holds info for removed cards from deck.

    public class AddToPiles
    {
        public bool success { get; set; }
        public string deck_id { get; set; }
        public int remaining { get; set; }
        public Piles piles { get; set; }
    }

    public class Piles
    {
        public Discard discard { get; set; }
    }

    public class Discard
    {
        public int remaining { get; set; }
    }

    //6)ListCards - holds info for listing kept cards.
    //Last thing we need on this project for a finishing touch.

    public class ListPiles
    {
        public bool success { get; set; }
        public string deck_id { get; set; }
        public string remaining { get; set; }
        public PilesSet piles { get; set; }
    }

    public class PilesSet
    {
        public Player1 player1 { get; set; }
        public Player2 player2 { get; set; }
    }

    public class Player1
    {
        public string remaining { get; set; }
    }

    public class Player2
    {
        public Cards[] cards { get; set; }
        public string remaining { get; set; }
    }

    public class Cards
    {
        public string image { get; set; }
        public string value { get; set; }
        public string suit { get; set; }
        public string code { get; set; }
    }

}
